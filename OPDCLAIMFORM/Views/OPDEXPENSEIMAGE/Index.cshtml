@model  OPDCLAIMFORM.Models.ImgViewModel

@{
    ViewBag.Title = "Receipt Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header card-header-primary card-header-icon">
                    <div class="card-text">
                        <h4 class="card-title">Receipt List</h4>
                    </div>
                </div>
            <div class="card-body">
                @using (Html.BeginForm("Index", "OPDEXPENSEIMAGE", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
                {
                    @Html.Hidden("opdType", Model.OPDType);
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExpenseName, "Receipt Name", htmlAttributes: new { @class = "bmd-label-floating" })
                        @Html.EditorFor(m => m.ExpenseName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.ExpenseName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ExpenseAmount, "Receipt Amount", htmlAttributes: new { @class = "bmd-label-floating" })
                        @Html.EditorFor(m => m.ExpenseAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.ExpenseAmount, "", new { @class = "text-danger" })
                    </div>
                    <div class="well bs-component">
                        <div class="row">
                            <div class="col-md-8 col-8">
                                <div class="input-group">
                                    <span class="input-group-btn">
                                        <span class="btn btn-default btn-file">
                                            Browse&hellip;
                                            @Html.TextBoxFor(m => m.FileAttach, new { type = "file", placeholder = Html.DisplayNameFor(m => m.FileAttach), @class = "form-control" })
                                        </span>
                                    </span>
                                    <input type="text" class="form-control" readonly>
                                </div>
                                @Html.ValidationMessageFor(m => m.FileAttach, "", new { @class = "text-danger custom-danger" })
                            </div>
                            <div class="col-md-4 col-4">
                                <input type="submit" class="btn btn-fill btn-primary" value="Upload" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            </div>
        </div>
        @if (Model.ImgLst != null && Model.ImgLst.Count > 0)
        {
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header card-header-primary card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">description</i>
                        </div>
                        <h4 class="card-title">List of Images</h4>
                    </div>
                    <div class="card-body">
                        <div class="material-datatables">

                            <table class="table table-striped table-no-bordered table-hover responsive" cellspacing="0" width="100%" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Sr.</th>
                                        <th>Image Name</th>
                                        <th></th>
                                        <th>Name</th>
                                        <th>Amount</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.ImgLst.Count; i++)
                                    {
                                        <tr>
                                            <td>@(i + 1)</td>

                                            <td>
                                                <div class="input-group">
                                                    <i class="fa fa-2x fa-paperclip text-navy pr-1"></i>
                                                    <a class="download-file1" href="@Url.Action("DownloadFile", "OPDEXPENSEIMAGE", new { fileId = @Model.ImgLst[i].FileId })" target="_blank">
                                                        @Model.ImgLst[i].FileName
                                                    </a>
                                                </div>
                                            </td>

                                            <td>
                                                <div>
                                                    <img src="@Url.Action("DownloadFile", "OPDEXPENSEIMAGE", new { fileId = @Model.ImgLst[i].FileId })" width="100" height="100" />
                                                </div>
                                            </td>

                                            <td>
                                                <div>
                                                    @Html.DisplayFor(model => @Model.ImgLst[i].ExpenseName)
                                                </div>
                                            </td>

                                            <td>
                                                <div>
                                                    @Html.DisplayFor(model => @Model.ImgLst[i].ExpenseAmount)
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    @{string dumyDeleteID = @Html.DisplayFor(model => @Model.ImgLst[i].FileId) + "?opdexpenseid=" + @Html.DisplayFor(model => @Model.ImgLst[i].OPDExpense_id)+"&opdType=" +@Html.DisplayFor(model => @Model.ImgLst[i].OPDType);}
                                                    <a href="javascript:;" onclick="md.initShowSwal('warning-message-and-cancel', 'OPDEXPENSEIMAGE', '@dumyDeleteID')" class="btn btn-link btn-danger btn-just-icon remove"><i class="material-icons">close</i></a>
                                                    @*@Html.ActionLink("Delete", "Delete", new { id = @Model.ImgLst[i].FileId, opdexpenseid = @Model.ImgLst[i].OPDExpense_id })*@
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        }
        @if (@ViewData["OPDTYPE"] != null)
        {
            if (@ViewData["OPDTYPE"].Equals("OPD Expense"))
            {
        <div class="col-md-12">
            @Html.ActionLink("Back to Edit", "Edit", "OPDExpenses", new { id = @ViewData["OPDEXPENSE_ID"] }, null)
        </div>
            }
            else
            {
        <div class="col-md-12">
            @Html.ActionLink("Back to Edit", "Edit", "HOSPITALExpense", new { id = @ViewData["OPDEXPENSE_ID"] }, null)
        </div>
            }
        }
</div>

@section Scripts
{
    @*Scripts*@
    @Scripts.Render("~/bundles/bootstrap-file")

    @*Styles*@
        @Styles.Render("~/Content/Bootstrap-file/css")
}






    @*@Html.HiddenFor(m => m.OPDExpense_ID, new { Value = @ViewData["OPDEXPENSE_ID"] })*@
