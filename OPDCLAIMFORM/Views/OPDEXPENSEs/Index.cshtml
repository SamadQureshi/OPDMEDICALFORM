@model IEnumerable<OPDCLAIMFORM.OPDEXPENSE>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Claim Form List</h2>


@Html.ActionLink("Create New OPD FORM", "Create", "OPDEXPENSEs") <span> | </span> @Html.ActionLink("Create New Hospital FORM", "Create", "HOSPITALEXPENSE")

<hr />

@using (Html.BeginForm("Index", "OPDEXPENSEs", FormMethod.Get))
{
    <p>
        Find by Status: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Employee Name", "Index", new { sortOrder = ViewBag.EmployeeNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayName("Employee Department")
        </th>
        <th>
            @Html.ActionLink("Claim For Month", "Index", new { sortOrder = ViewBag.ClaimForMonthSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayName("Claim For Year")
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayName("Total Amount Claimed")
        </th>
        <th>
            @Html.ActionLink("OPD Type", "Index", new { sortOrder = ViewBag.OPDTypeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EMPLOYEE_NAME)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EMPLOYEE_DEPARTMENT)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CLAIM_MONTH)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CLAIM_YEAR)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.STATUS)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TOTAL_AMOUNT_CLAIMED)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OPDTYPE)
            </td>
            <td>
                @if (item.OPDTYPE.Equals("OPD Expense"))
                {
                    if (item.STATUS.Equals("InProcess") || item.STATUS.Equals("HRRejected"))
                    {
                        @Html.ActionLink("Edit", "Edit", "OPDEXPENSEs", new { id = item.OPDEXPENSE_ID }, null) <span> | </span>
                        @Html.ActionLink("Details", "Details", "OPDEXPENSEs", new { id = item.OPDEXPENSE_ID }, null)

                    }

                    else
                    {
                        @Html.ActionLink("Details", "Details", "OPDEXPENSEs", new { id = item.OPDEXPENSE_ID }, null)
                    }

                }
                @if (item.OPDTYPE.Equals("Hospital Expense"))
                {
                    if (item.STATUS.Equals("InProcess") || item.STATUS.Equals("HRRejected"))
                    {
                        @Html.ActionLink("Edit", "Edit", "HOSPITALEXPENSE", new { id = item.OPDEXPENSE_ID }, null) <span> | </span>
                        @Html.ActionLink("Details", "Details", "HOSPITALEXPENSE", new { id = item.OPDEXPENSE_ID }, null)
                    }

                    else
                    {
                        @Html.ActionLink("Details", "Details", "HOSPITALEXPENSE", new { id = item.OPDEXPENSE_ID }, null)
                    }


                }
            </td>
        </tr>
    }

</table>



@*<span> | </span>
    @Html.ActionLink("Delete", "Delete", "OPDEXPENSEs", new { id = item.OPDEXPENSE_ID }, null);

    <span> | </span>
    @Html.ActionLink("Delete", "Delete", "HOSPITALEXPENSE", new { id = item.OPDEXPENSE_ID }, null)*@